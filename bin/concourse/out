#!/usr/bin/env ruby

require 'open3'
$: << (ENV['is_devel'] ? File.expand_path('../../../lib', __FILE__) : '/opt/lib')
require 'kite/helpers/concourse'

params = Kite::Helpers::Concourse.params(STDIN.read)

Kite::Helpers::Concourse.fatal '`source` missing' unless params['source']

key = params['source']['json_key']
kubeconfig = params['source']['kubeconfig']
command = params['params']['command']

Kite::Helpers::Concourse.fatal '`kubeconfig` missing' if kubeconfig.to_s.empty?
Kite::Helpers::Concourse.fatal '`command` missing' if command.to_s.empty?

path_key = '/tmp/key.json'
path_kubeconfig = '/tmp/kubeconfig'

File.write(path_key, key) if key
File.write(path_kubeconfig, kubeconfig)

env = {
  'KUBECONFIG' => path_kubeconfig,
}

env['GOOGLE_CREDENTIALS'] = path_key if key

# Run the command

Kite::Helpers::Concourse.log("+ #{command}")
Open3.popen2e(env, command) do |stdin, stdout, wait_thr|
  Kite::Helpers::Concourse.log(stdout.read)

  if wait_thr.value.exitstatus.zero?
    Kite::Helpers::Concourse.respond(version: { status: 'ok' })
  else
    Kite::Helpers::Concourse.respond(
      version: { status: 'error' },
      metadata: ["Failed to execute command #{command}"]
    )
  end
end
